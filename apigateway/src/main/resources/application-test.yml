spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8888/auth/realms/obss-scheduler
      client:
        registration:
          keycloak:
            client-id: schedule-app-be
            client-secret: d2cff314-7bbd-42f8-8c29-743cfef3827c
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://keycloak:8888/auth/realms/obss-scheduler
  session:
    store-type: redis
  redis:
    host: redis
    port: 6379
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            redis-rate-limiter.requestedTokens: 1
      routes:
        - id: meeting-route
          uri: lb://meeting-manager-service
          predicates:
          - Path=/meetings/*
          - Path=/meeting-provider/*+
        - id: google-manager-route
          uri: lb://google-calendar-service
          predicates:
          - Path=/google-account-manager/*
        - id: zoom-manager-route
          uri: lb://zoom-service
          predicates:
          - Path=/zoom-account-manager/*
        - id: notification-service
          uri: lb://notification-service
          predicates:
          - Path=/websocket/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin
            - name: Retry
              args:
                retries: 3
                method: GET
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms

resilience4j:
  circuitbreaker:
    instances:
      meetingService:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15000
        registerHealthIndicator: true
  timelimiter:
    instances:
      meeting-manager-service:
        timeoutDuration: 2s
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:8761/eureka
    register-with-eureka: false
    fetchRegistry: true
  instance:
    preferIpAddress: true
